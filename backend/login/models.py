
from django.contrib.auth.models import models
from django.contrib.auth.models import AbstractUser
import uuid

class Organization(models.Model):
    name = models.CharField(max_length=255)

    # Need this to return the name of the organization correctly when fetching the organizations for deployment.
    def __str__(self):
        return self.name

class User(AbstractUser):
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
    name = models.CharField(max_length=255, null=True, blank=True)
    organization = models.ForeignKey(Organization, on_delete=models.CASCADE, null=True, blank=True)
    ROLES = [
        ('admin', 'Admin'),
        ('dev', 'Dev'),
        ('researcher', 'Researcher'),
    ]
    role = models.CharField(max_length=25, choices=ROLES, default='researcher')
    create_deployments = models.BooleanField(default=False)
    delete_deployments = models.BooleanField(default=False)
    manage_images = models.BooleanField(default=False)
    view_logs = models.BooleanField(default=False)
    access_preset_containers = models.BooleanField(default=False)
    manage_kubernetes = models.BooleanField(default=False)

class Deployment(models.Model):
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
    user = models.ForeignKey(User, on_delete=models.CASCADE, to_field='id')
    organization = models.ForeignKey(Organization, on_delete=models.CASCADE)
    deployment_name = models.CharField(max_length=255, unique=True)
    namespace = models.CharField(max_length=255)
    timestamp = models.DateTimeField(auto_now_add=True)
    CHOICES = [
        ('Pending', 'Pending'),
        ('Running', 'Running'),
        ('Failed', 'Failed'),
        ('Succeeded', 'Succeeded'),
    ]
    status = models.CharField(max_length=20, choices=CHOICES, default='Pending')
    resource = models.JSONField()
    image = models.CharField(max_length=255)
    command_arguments = models.JSONField()
    ports = models.JSONField()
    service_port = models.IntegerField()
    ingress_hostname = models.CharField(max_length=255)

    # Returns the name and ID generated by the ID field.
    def __str__(self):
        return f"{self.deployment_name} ({self.id})"